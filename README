ActiveKai
=========

Rails Plugin for Kai (http://sourceforge.net/projects/kai/)



Example
=======

You can write model class inheriting from ActiveKai.

 class Book < ActiveKai
   kai_servers ['192.168.10.1:11211','192.168.10.2:11211','192.168.10.3:11211']
 end

 book = Book.new(:id => 12345,:title => "Learning Erlang",:author => "John")
 puts book.author #=> john
 book.save 
 # The key on Kai is generated by :id parameter.

 b2 = Book.find(12345)
 b2.title = "Learning Erlang 2nd Ed."
 b2.save
 
 p b2.key #=> "Book_development/112345" 


DESCRIPTION
===========
You can read/write any data on Kai with ActiveRecord-like style.Notice that
Kai is key-value storage,so you have to specify key by some means.Now,this plugin 
generates key string from :id parameter.

The key is a string made from :id,class name and RAILS_ENV,so you can use string 
value on :id as well.If you want to see exact key string,call #key method on the
object.

INSTALL
=======

 script/plugin install git://github.com/sawamur/ActiveKai.git


CONFIGURATION
=============

KAI HOSTS
---------

You can specify hosts and ports as follows.

1.In a enviroments/(development|test|production).rb
 
 ActiveKai.servers = ['192.168.10.1:11211','192.168.10.2:11211','192.168.10.3:11211']

2.In a subclass

 class Book < ActiveKai
   kai_servers ['192.168.10.1:11211','192.168.10.2:11211','192.168.10.3:11211']
 end

Notice that server setting is shared in all subclass in a application.So the way 1 
is preferable.


KEY PREFIX
----------

 class Book < ActiveKai
    kai_key_prefix "MyBook"
 end

 b = Book.new(:id => "great_book",:name => "john")
 puts  b.key #=> "MyBook/great_book"

KEY INDEX
---------

 class Book < ActiveKai
    kai_key_index :name
 end
 b = Book.new(:name => "john",:title => "bar foo")
 puts b.key #=> "Book_development/john"


ABOUT KAI
=========

Kai (http://sourceforge.net/projects/kai/) is a key-value storage,you can read/write
data via memcache protocol.

VERSION
=======

version 0.1.0 


Copyright (c) 2009 Masaki Sawamura, released under the MIT license
